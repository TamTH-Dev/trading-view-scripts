// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© tamth_

//@version=5
indicator(title='Advanced Ichimoku', shorttitle='Advanced Ichimoku', overlay=true)


// Ichimoku
var color blue_color = color.new(#4577ED, 0)
var color purple_color = color.new(#7859BC, 0)
var color yellow_color = color.new(#FCEF72, 0)
var color orange_color = color.new(#F2AB47, 0)
var color cyan_color = color.new(#60C3D7, 0)
var color green_color = color.new(#52A895, 0)
var color red_color = color.new(#DA4F7A, 0)
var color green_color_opaque = color.new(#52A895, 90)
var color red_color_opaque = color.new(#DA4F7A, 90)

var string tenkan_sen_txt = 'Tenkan-sen'
var string kijun_sen_txt = 'Kijun-sen'
var string short_knife_txt = 'Short knife'
var string long_knife_txt = 'Long knife'
var string chikou_span_txt = 'Chikou-span'
var string senkou_span_a_txt = 'Senkou-span A'
var string senkou_span_b_txt = 'Senkou-span B'
var string kumo_cloud_txt = 'Kumo cloud'

int tenkan_sen_input = input.int(9, minval=1, title=tenkan_sen_txt)
int kijun_sen_input = input.int(17, minval=1, title=kijun_sen_txt)
int short_knife_input = input.int(65, minval=1, title=short_knife_txt)
int long_knife_input = input.int(129, minval=1, title=long_knife_txt)
int senkou_span_b_input = input.int(26, minval=1, title=senkou_span_b_txt)


method get_avg(int shift) => math.avg(ta.lowest(shift), ta.highest(shift))

float tenkan_sen = get_avg(tenkan_sen_input)
float kijun_sen = get_avg(kijun_sen_input)
float senkou_span_a = math.avg(tenkan_sen, kijun_sen)
float senkou_span_b = get_avg(senkou_span_b_input)
float short_knife = get_avg(short_knife_input)
float long_knife = get_avg(long_knife_input)
plot(tenkan_sen, color=blue_color, title=tenkan_sen_txt, linewidth=1)
plot(kijun_sen, color=purple_color, title=kijun_sen_txt, linewidth=1)
plot(short_knife, color=yellow_color, title=short_knife_txt, linewidth=2)
plot(long_knife, color=orange_color, title=long_knife_txt, linewidth=2)
plot(close, offset=-25, color=cyan_color, title=chikou_span_txt, linewidth=1)
senkou_plot_a = plot(senkou_span_a, offset=25, color=green_color, linewidth=1, title=senkou_span_a_txt)
senkou_plot_b = plot(senkou_span_b, offset=25, color=red_color, linewidth=1, title=senkou_span_b_txt)
fill(senkou_plot_a, senkou_plot_b, color=senkou_span_a > senkou_span_b ? green_color_opaque : red_color_opaque, title=kumo_cloud_txt)


method get_future_point(int shift, int idx) => math.avg(ta.highest(shift - idx), ta.lowest(shift - idx))
method get_future_point_1(int shift) => get_future_point(shift, 1)
method get_future_point_2(int shift) => get_future_point(shift, 2)
method get_future_point_3(int shift) => get_future_point(shift, 3)
method get_future_point_4(int shift) => get_future_point(shift, 4)
method get_future_point_5(int shift) => get_future_point(shift, 5)
method get_future_point_6(int shift) => get_future_point(shift, 6)
method get_future_point_7(int shift) => get_future_point(shift, 7)
method get_future_point_8(int shift) => get_future_point(shift, 8)
method get_future_point_9(int shift) => get_future_point(shift, 9)
method get_future_point_10(int shift) => get_future_point(shift, 10)
method get_future_point_11(int shift) => get_future_point(shift, 11)
method get_future_point_12(int shift) => get_future_point(shift, 12)
method get_future_point_13(int shift) => get_future_point(shift, 13)
method get_future_point_14(int shift) => get_future_point(shift, 14)
method get_future_point_15(int shift) => get_future_point(shift, 15)
method get_future_point_16(int shift) => get_future_point(shift, 16)
method get_future_point_17(int shift) => get_future_point(shift, 17)
method get_future_point_18(int shift) => get_future_point(shift, 18)
method get_future_point_19(int shift) => get_future_point(shift, 19)
method get_future_point_20(int shift) => get_future_point(shift, 20)
method get_future_point_21(int shift) => get_future_point(shift, 21)
method get_future_point_22(int shift) => get_future_point(shift, 22)
method get_future_point_23(int shift) => get_future_point(shift, 23)
method get_future_point_24(int shift) => get_future_point(shift, 24)
method get_future_point_25(int shift) => get_future_point(shift, 25)
method get_future_point_26(int shift) => get_future_point(shift, 26)
    
tenkan_sen_future_point_1 = get_future_point_1(tenkan_sen_input)
tenkan_sen_future_point_2 = get_future_point_2(tenkan_sen_input)
tenkan_sen_future_point_3 = get_future_point_3(tenkan_sen_input)
tenkan_sen_future_point_4 = get_future_point_4(tenkan_sen_input)
tenkan_sen_future_point_5 = get_future_point_5(tenkan_sen_input)
tenkan_sen_future_point_6 = get_future_point_6(tenkan_sen_input)
tenkan_sen_future_point_7 = get_future_point_7(tenkan_sen_input)
tenkan_sen_future_point_8 = get_future_point_8(tenkan_sen_input)
plot(tenkan_sen_future_point_1, color=blue_color, linewidth=1, offset=1, show_last=1, style=plot.style_circles, display = display.pane)
plot(tenkan_sen_future_point_2, color=blue_color, linewidth=1, offset=2, show_last=1, style=plot.style_circles, display = display.pane)
plot(tenkan_sen_future_point_3, color=blue_color, linewidth=1, offset=3, show_last=1, style=plot.style_circles, display = display.pane)
plot(tenkan_sen_future_point_4, color=blue_color, linewidth=1, offset=4, show_last=1, style=plot.style_circles, display = display.pane)
plot(tenkan_sen_future_point_5, color=blue_color, linewidth=1, offset=5, show_last=1, style=plot.style_circles, display = display.pane)
plot(tenkan_sen_future_point_6, color=blue_color, linewidth=1, offset=6, show_last=1, style=plot.style_circles, display = display.pane)
plot(tenkan_sen_future_point_7, color=blue_color, linewidth=1, offset=7, show_last=1, style=plot.style_circles, display = display.pane)
plot(tenkan_sen_future_point_8, color=blue_color, linewidth=1, offset=8, show_last=1, style=plot.style_circles, display = display.pane)

kijun_sen_future_point_1 = get_future_point_1(kijun_sen_input)
kijun_sen_future_point_2 = get_future_point_2(kijun_sen_input)
kijun_sen_future_point_3 = get_future_point_3(kijun_sen_input)
kijun_sen_future_point_4 = get_future_point_4(kijun_sen_input)
kijun_sen_future_point_5 = get_future_point_5(kijun_sen_input)
kijun_sen_future_point_6 = get_future_point_6(kijun_sen_input)
kijun_sen_future_point_7 = get_future_point_7(kijun_sen_input)
kijun_sen_future_point_8 = get_future_point_8(kijun_sen_input)
plot(kijun_sen_future_point_1, color=purple_color, linewidth=1, offset=1, show_last=1, style=plot.style_circles, display = display.pane)
plot(kijun_sen_future_point_2, color=purple_color, linewidth=1, offset=2, show_last=1, style=plot.style_circles, display = display.pane)
plot(kijun_sen_future_point_3, color=purple_color, linewidth=1, offset=3, show_last=1, style=plot.style_circles, display = display.pane)
plot(kijun_sen_future_point_4, color=purple_color, linewidth=1, offset=4, show_last=1, style=plot.style_circles, display = display.pane)
plot(kijun_sen_future_point_5, color=purple_color, linewidth=1, offset=5, show_last=1, style=plot.style_circles, display = display.pane)
plot(kijun_sen_future_point_6, color=purple_color, linewidth=1, offset=6, show_last=1, style=plot.style_circles, display = display.pane)
plot(kijun_sen_future_point_7, color=purple_color, linewidth=1, offset=7, show_last=1, style=plot.style_circles, display = display.pane)
plot(kijun_sen_future_point_8, color=purple_color, linewidth=1, offset=8, show_last=1, style=plot.style_circles, display = display.pane)

short_knife_future_point_1 = get_future_point_1(short_knife_input)
short_knife_future_point_2 = get_future_point_2(short_knife_input)
short_knife_future_point_3 = get_future_point_3(short_knife_input)
short_knife_future_point_4 = get_future_point_4(short_knife_input)
short_knife_future_point_5 = get_future_point_5(short_knife_input)
short_knife_future_point_6 = get_future_point_6(short_knife_input)
short_knife_future_point_7 = get_future_point_7(short_knife_input)
short_knife_future_point_8 = get_future_point_8(short_knife_input)
short_knife_future_point_9 = get_future_point_9(short_knife_input)
short_knife_future_point_10 = get_future_point_10(short_knife_input)
plot(short_knife_future_point_1, color=yellow_color, linewidth=1, offset=1, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_2, color=yellow_color, linewidth=1, offset=2, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_3, color=yellow_color, linewidth=1, offset=3, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_4, color=yellow_color, linewidth=1, offset=4, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_5, color=yellow_color, linewidth=1, offset=5, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_6, color=yellow_color, linewidth=1, offset=6, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_7, color=yellow_color, linewidth=1, offset=7, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_8, color=yellow_color, linewidth=1, offset=8, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_9, color=yellow_color, linewidth=1, offset=9, show_last=1, style=plot.style_circles, display = display.pane)
plot(short_knife_future_point_10, color=yellow_color, linewidth=1, offset=10, show_last=1, style=plot.style_circles, display = display.pane)

long_knife_future_point_1 = get_future_point_1(long_knife_input)
long_knife_future_point_2 = get_future_point_2(long_knife_input)
long_knife_future_point_3 = get_future_point_3(long_knife_input)
long_knife_future_point_4 = get_future_point_4(long_knife_input)
long_knife_future_point_5 = get_future_point_5(long_knife_input)
long_knife_future_point_6 = get_future_point_6(long_knife_input)
long_knife_future_point_7 = get_future_point_7(long_knife_input)
long_knife_future_point_8 = get_future_point_8(long_knife_input)
long_knife_future_point_9 = get_future_point_9(long_knife_input)
long_knife_future_point_10 = get_future_point_10(long_knife_input)
plot(long_knife_future_point_1, color=orange_color, linewidth=1, offset=1, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_2, color=orange_color, linewidth=1, offset=2, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_3, color=orange_color, linewidth=1, offset=3, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_4, color=orange_color, linewidth=1, offset=4, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_5, color=orange_color, linewidth=1, offset=5, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_6, color=orange_color, linewidth=1, offset=6, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_7, color=orange_color, linewidth=1, offset=7, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_8, color=orange_color, linewidth=1, offset=8, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_9, color=orange_color, linewidth=1, offset=9, show_last=1, style=plot.style_circles, display = display.pane)
plot(long_knife_future_point_10, color=orange_color, linewidth=1, offset=10, show_last=1, style=plot.style_circles, display = display.pane)

senkou_span_a_future_point_1 = math.avg(tenkan_sen_future_point_1, kijun_sen_future_point_1)
senkou_span_a_future_point_2 = math.avg(tenkan_sen_future_point_2, kijun_sen_future_point_2)
senkou_span_a_future_point_3 = math.avg(tenkan_sen_future_point_3, kijun_sen_future_point_3)
senkou_span_a_future_point_4 = math.avg(tenkan_sen_future_point_4, kijun_sen_future_point_4)
senkou_span_a_future_point_5 = math.avg(tenkan_sen_future_point_5, kijun_sen_future_point_5)
senkou_span_a_future_point_6 = math.avg(tenkan_sen_future_point_6, kijun_sen_future_point_6)
senkou_span_a_future_point_7 = math.avg(tenkan_sen_future_point_7, kijun_sen_future_point_7)
senkou_span_a_future_point_8 = math.avg(tenkan_sen_future_point_8, kijun_sen_future_point_8)
plot(senkou_span_a_future_point_1, color=green_color, linewidth=1, offset=26, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_a_future_point_2, color=green_color, linewidth=1, offset=27, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_a_future_point_3, color=green_color, linewidth=1, offset=28, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_a_future_point_4, color=green_color, linewidth=1, offset=29, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_a_future_point_5, color=green_color, linewidth=1, offset=30, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_a_future_point_6, color=green_color, linewidth=1, offset=31, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_a_future_point_7, color=green_color, linewidth=1, offset=32, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_a_future_point_8, color=green_color, linewidth=1, offset=33, show_last=1, style=plot.style_circles, display = display.pane)

senkou_span_b_future_point_1 = get_future_point_1(senkou_span_b_input)
senkou_span_b_future_point_2 = get_future_point_2(senkou_span_b_input)
senkou_span_b_future_point_3 = get_future_point_3(senkou_span_b_input)
senkou_span_b_future_point_4 = get_future_point_4(senkou_span_b_input)
senkou_span_b_future_point_5 = get_future_point_5(senkou_span_b_input)
senkou_span_b_future_point_6 = get_future_point_6(senkou_span_b_input)
senkou_span_b_future_point_7 = get_future_point_7(senkou_span_b_input)
senkou_span_b_future_point_8 = get_future_point_8(senkou_span_b_input)
plot(senkou_span_b_future_point_1, color=red_color, linewidth=1, offset=26, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_b_future_point_2, color=red_color, linewidth=1, offset=27, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_b_future_point_3, color=red_color, linewidth=1, offset=28, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_b_future_point_4, color=red_color, linewidth=1, offset=29, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_b_future_point_5, color=red_color, linewidth=1, offset=30, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_b_future_point_6, color=red_color, linewidth=1, offset=31, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_b_future_point_7, color=red_color, linewidth=1, offset=32, show_last=1, style=plot.style_circles, display = display.pane)
plot(senkou_span_b_future_point_8, color=red_color, linewidth=1, offset=33, show_last=1, style=plot.style_circles, display = display.pane)




// Williams Fractals
int fractals_periods = input.int(title="Williams Fractals Periods", defval=4, minval=2)

// Up Fractals
bool up_flag_down_frontier = true
bool up_flag_up_frontier_0 = true
bool up_flag_up_frontier_2 = true
bool up_flag_up_frontier_3 = true
bool up_flag_up_frontier_4 = true

for idx = 1 to fractals_periods
    up_flag_down_frontier := up_flag_down_frontier and (high[fractals_periods-idx] < high[fractals_periods])
    up_flag_up_frontier_0 := up_flag_up_frontier_0 and (high[fractals_periods+idx] < high[fractals_periods])
    up_flag_up_frontier_2 := up_flag_up_frontier_2 and (high[fractals_periods+1] <= high[fractals_periods] and high[fractals_periods+idx + 1] < high[fractals_periods])
    up_flag_up_frontier_3 := up_flag_up_frontier_3 and (high[fractals_periods+1] <= high[fractals_periods] and high[fractals_periods+2] <= high[fractals_periods] and high[fractals_periods+idx + 2] < high[fractals_periods])
    up_flag_up_frontier_3 := up_flag_up_frontier_3 and (high[fractals_periods+1] <= high[fractals_periods] and high[fractals_periods+2] <= high[fractals_periods] and high[fractals_periods+3] <= high[fractals_periods] and high[fractals_periods+idx + 3] < high[fractals_periods])
    up_flag_up_frontier_4 := up_flag_up_frontier_4 and (high[fractals_periods+1] <= high[fractals_periods] and high[fractals_periods+2] <= high[fractals_periods] and high[fractals_periods+3] <= high[fractals_periods] and high[fractals_periods+4] <= high[fractals_periods] and high[fractals_periods+idx + 4] < high[fractals_periods])

flag_up_frontier = up_flag_up_frontier_0 or up_flag_up_frontier_2 or up_flag_up_frontier_3 or up_flag_up_frontier_3 or up_flag_up_frontier_4
up_fractal = up_flag_down_frontier and flag_up_frontier

// Down Fractals
bool down_flag_down_frontier = true
bool down_flag_up_frontier_0 = true
bool down_flag_up_frontier_1 = true
bool down_flag_up_frontier_2 = true
bool down_flag_up_frontier_3 = true
bool down_flag_up_frontier_4 = true

for idx = 1 to fractals_periods
    down_flag_down_frontier := down_flag_down_frontier and (low[fractals_periods-idx] > low[fractals_periods])
    down_flag_up_frontier_0 := down_flag_up_frontier_0 and (low[fractals_periods+idx] > low[fractals_periods])
    down_flag_up_frontier_1 := down_flag_up_frontier_1 and (low[fractals_periods+1] >= low[fractals_periods] and low[fractals_periods+idx + 1] > low[fractals_periods])
    down_flag_up_frontier_2 := down_flag_up_frontier_2 and (low[fractals_periods+1] >= low[fractals_periods] and low[fractals_periods+2] >= low[fractals_periods] and low[fractals_periods+idx + 2] > low[fractals_periods])
    down_flag_up_frontier_3 := down_flag_up_frontier_3 and (low[fractals_periods+1] >= low[fractals_periods] and low[fractals_periods+2] >= low[fractals_periods] and low[fractals_periods+3] >= low[fractals_periods] and low[fractals_periods+idx + 3] > low[fractals_periods])
    down_flag_up_frontier_4 := down_flag_up_frontier_4 and (low[fractals_periods+1] >= low[fractals_periods] and low[fractals_periods+2] >= low[fractals_periods] and low[fractals_periods+3] >= low[fractals_periods] and low[fractals_periods+4] >= low[fractals_periods] and low[fractals_periods+idx + 4] > low[fractals_periods])

flag_down_frontier = down_flag_up_frontier_0 or down_flag_up_frontier_1 or down_flag_up_frontier_2 or down_flag_up_frontier_3 or down_flag_up_frontier_4
down_fractal = down_flag_down_frontier and flag_down_frontier

plotshape(down_fractal, style=shape.arrowdown, location=location.belowbar, offset=-fractals_periods, color=red_color, size = size.small, display = display.pane)
plotshape(up_fractal, style=shape.arrowup, location=location.abovebar, offset=-fractals_periods, color=green_color, size = size.small, display = display.pane)
