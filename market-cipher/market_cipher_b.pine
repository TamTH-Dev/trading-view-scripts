// © tamth_
// @version=5
indicator("Market Cipher B", overlay = false)


// Colors
color white_color = color.white
color blue_dark_color = #082EBF
color blue_light_color = #3DCBFF
color yellow_color = #F2E40A
color green_color = #16F9BA
color red_color = #F23A64
color pink_color = #E02FF9
color aqua_color = #21BAF3
color purple_color = #722FFA


// Inputs
string threshold_grp = "Threshold"
bool threshold_showed = input.bool(true, title = "Show", group = threshold_grp)
int overbought_threshold = input.int(60, title = "Overbought Threshold", group = threshold_grp)
int oversold_threshold = input.int(-60, title = "Oversold Threshold", group = threshold_grp)
string wt_grp = "Waves Trend"
bool wt_showed = input.bool(true, title = "Show", group = wt_grp)
int wt_chl_prd = input.int(9, title = "Channel Period", group = wt_grp)
int wt_avg_prd = input.int(12, title = "Average Period", group = wt_grp)
float wt_ma_src = input.source(hlc3, title = "MA Source", group = wt_grp)
int wt_ma_len = input.int(3, title = "MA Length", group = wt_grp)
bool wt_div_showed = input.bool(true, title = "Show Divergence", group = wt_grp)
int wt_long_bearish_div_level = input.int(45, title = "Long Bearish Divergence Level", group = wt_grp)
int wt_long_bullish_div_level = input.int(-65, title = "Long Bullish Divergence Level", group = wt_grp)
int wt_short_brearish_div_level = input.int(15, title = "Short Bearish Divergence Level", group = wt_grp)
int wt_short_bullish_div_level = input.int(-40, title = "Short Bullish Divergence Level", group = wt_grp)
string mfo_grp = "MFO"
bool mfo_showed = input.bool(true, title = "Show", group = mfo_grp)
int mfo_prd = input.int(60, title = "Period", group = mfo_grp)
int mfo_mult = input.int(150, title = "Area Multiplier", group = mfo_grp)
float mfo_pos_y = input.float(2.5, title = "Position Y", group = mfo_grp)
string rsi_grp = "RSI"
bool rsi_showed = input.bool(true, title = "Show", group = rsi_grp)
int rsi_prd = input.int(40, title = "Period", group = rsi_grp)
string stoch_rsi_grp = "Stochastic RSI"
bool stoch_rsi_showed = input.bool(true, title = "Show", group = stoch_rsi_grp)
int stoch_rsi_prd = input.int(81, title = "Period", group = stoch_rsi_grp)
string vwap_grp = "VWAP"
bool vwap_showed = input.bool(true, title = "Show", group = vwap_grp)


// Methods
get_top_fractal(src) => src[4] < src[2] and src[3] < src[2] and src[2] > src[1] and src[2] > src[0]
get_bot_fractal(src) => src[4] > src[2] and src[3] > src[2] and src[2] < src[1] and src[2] < src[0]
method fractalize(float src) => get_top_fractal(src) ? 1 : get_bot_fractal(src) ? -1 : 0

method get_div_points(float src, int top_limit, int bot_limit) =>
    float top_fractal = fractalize(src) > 0 and src[2] >= top_limit ? src[2] : na
    float bot_fractal = fractalize(src) < 0 and src[2] <= bot_limit ? src[2] : na
    float high_prev = ta.valuewhen(top_fractal, src[2], 0)[2]
    float high_price = ta.valuewhen(top_fractal, high[2], 0)[2]
    float low_prev = ta.valuewhen(bot_fractal, src[2], 0)[2]
    float low_price = ta.valuewhen(bot_fractal, low[2], 0)[2]
    bool is_bearish = top_fractal and high[2] > high_price and src[2] < high_prev
    bool is_bullish = bot_fractal and low[2] < low_price and src[2] > low_prev
    [top_fractal, bot_fractal, low_prev, is_bearish, is_bullish]

get_wt_and_vwap() =>
    float src = request.security(syminfo.tickerid, timeframe.period, wt_ma_src)
    float esa = ta.ema(src, wt_chl_prd)
    float d = ta.ema(math.abs(src - esa), wt_chl_prd)
    float ci = (src - esa) / (0.015 * d)
    float leading_wt = request.security(syminfo.tickerid, timeframe.period, ta.ema(ci, wt_avg_prd))
    float lagging_wt = request.security(syminfo.tickerid, timeframe.period, ta.sma(leading_wt, wt_ma_len))
    float vwap = leading_wt - lagging_wt
    [leading_wt, lagging_wt, vwap]

get_mfo() => request.security(syminfo.tickerid, timeframe.period, ta.sma(((close - open) / (high - low)) * mfo_mult, mfo_prd) - mfo_pos_y)
        
get_indicators() =>
    int offset = 0
    [leading_wt, lagging_wt, vwap] = get_wt_and_vwap()
    float mfo = get_mfo()
    float rsi = ta.sma(ta.stoch(close, high, low, rsi_prd), 2)
    float stoch_rsi = ta.sma(ta.stoch(close, high, low, stoch_rsi_prd), 2)
    [leading_wt[offset], lagging_wt[offset], vwap[offset], mfo[offset], rsi[offset], stoch_rsi[offset]]


[leading_wt, lagging_wt, vwap, mfo, rsi, stoch_rsi] = request.security(syminfo.tickerid, timeframe.period, get_indicators())

[wt_long_top_fractal, wt_long_bot_fractal, wt_long_low_prev, is_wt_long_bearish_div, is_wt_long_bullish_div] = get_div_points(lagging_wt, wt_long_bearish_div_level, wt_long_bullish_div_level)
[wt_short_top_fractal, wt_short_bot_fractal, wt_short_low_prev, is_wt_short_bearish_div, is_wt_short_bullish_div] =  get_div_points(lagging_wt, wt_short_brearish_div_level, wt_short_bullish_div_level)

// Plots
// var space_0_line = plot(-100, title = "Space", color = color.new(white_color, 100), editable = false, display = display.pane)
// var space_1_line = plot(-120, title = "Space", color = color.new(white_color, 100), editable = false, display = display.pane)
// fill(space_0_line, space_1_line, title = "Space", color = color.new(white_color, 100), editable = false)

plot(threshold_showed ? overbought_threshold : na, title = "Overbought Threshold", color = color.new(white_color, 80), display = display.pane)
plot(threshold_showed ? oversold_threshold : na, title = "Oversold Threshold", color = color.new(white_color, 80), display = display.pane)

var mfo_bar_top_line = plot(mfo_showed ? -95 : na, title = "MFO Bar", color = color.new(white_color, 100), editable = false, display = display.pane)
var mfo_bar_bottom_line = plot(mfo_showed ? -100 : na, title = "MFO Bar", color = color.new(white_color, 100), editable = false, display = display.pane)
fill(mfo_bar_top_line, mfo_bar_bottom_line, title = "MFO Bar", color = mfo > 0 ? color.new(green_color, 25) : color.new(red_color, 25))

plot(wt_showed ? leading_wt : na, title = "Leading Wave Trend", color = blue_light_color, linewidth = 1, style = plot.style_area)
plot(wt_showed ? lagging_wt : na, title = "Lagging Wave Trend", color = color.new(blue_dark_color, 20), linewidth = 1, style = plot.style_area)

plot(vwap_showed ? vwap : na, title = "VWAP", color = color.new(yellow_color, 55), linewidth = 1, style = plot.style_area)

plot(mfo_showed ? mfo : na, title = "MFO", color = mfo > 0 ? color.new(green_color, 60) : color.new(red_color, 60), linewidth = 2, style = plot.style_area)

plot(0, title = "Zero Line", color = white_color, display = display.pane)

plot(rsi_showed ? rsi : na, title = "RSI", color = pink_color)

plot(stoch_rsi_showed ? stoch_rsi : na, title = "Stochastic RSI", color = rsi > stoch_rsi ? aqua_color : purple_color, linewidth = 2)

plot(ta.crossover(leading_wt, lagging_wt) ? lagging_wt : na, title = "Buy Signal", color = color.new(green_color, 10), linewidth = 3, style = plot.style_circles, display = display.pane)
plot(ta.crossunder(leading_wt, lagging_wt) ? lagging_wt : na, title = "Sell Signal", color = color.new(red_color, 10), linewidth = 3, style = plot.style_circles, display = display.pane)

// bool is_oversold_buy_signal = ta.crossover(leading_wt, lagging_wt) and leading_wt < oversold_threshold
// bool is_overbought_sell_signal = ta.crossover(lagging_wt, leading_wt) and leading_wt > overbought_threshold
// plotchar(is_oversold_buy_signal ? -107 : na, title = "Oversold Buy Signal", char = "•", color = color.new(green_color, 30), location = location.absolute, offset = 0, size = size.tiny, display = display.pane)
// plotchar(is_overbought_sell_signal ? -107 : na, title = "Oversold Sell Signal", char = "•", color = color.new(red_color, 30), location = location.absolute, offset = 0, size = size.tiny, display = display.pane)

// bool is_div_buy_signal = wt_div_showed and (is_wt_long_bullish_div or is_wt_short_bullish_div)
// bool is_div_sell_signal = wt_div_showed and (is_wt_long_bearish_div or is_wt_short_bearish_div)
// plotchar(is_div_buy_signal ? -106 : na, title = "Divergence Buy Signal", char = "•", color = green_color, location = location.absolute, offset = -2, size = size.small, display = display.pane)
// plotchar(is_div_sell_signal ? -106 : na, title = "Divergence Sell Signal", char = "•", color = red_color, location = location.absolute, offset = -2, size = size.small, display = display.pane)

color wt_long_bearish_div_color = wt_div_showed and is_wt_long_bearish_div ? red_color : na
color wt_long_bullish_div_color = wt_div_showed and is_wt_long_bullish_div ? green_color : na
color wt_short_bearish_div_color = wt_div_showed and is_wt_short_bearish_div ? color.new(red_color, 60) : na
color wt_short_bullish_div_color = wt_div_showed and is_wt_short_bullish_div ? color.new(green_color, 60) : na
plot(series = wt_long_top_fractal ? lagging_wt[2] : na, title = "Wave Trend Long Bearish Divergence", color = wt_long_bearish_div_color, linewidth = 2, offset = -2, display = display.pane)
plot(series = wt_long_bot_fractal ? lagging_wt[2] : na, title = "Wave Trend Long Bullish Divergence", color = wt_long_bullish_div_color, linewidth = 2, offset = -2, display = display.pane)
plot(series = wt_short_top_fractal ? lagging_wt[2] : na, title = "Wave Trend Short Bearish Divergence", color = wt_short_bearish_div_color, linewidth = 2, offset = -2, display = display.pane)
plot(series = wt_short_bot_fractal ? lagging_wt[2] : na, title = "Wave Trend Short Bullish Divergence", color = wt_short_bullish_div_color, linewidth = 2, offset = -2, display = display.pane)