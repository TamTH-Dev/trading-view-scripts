// Â© tamth_
// @version=5
indicator("Advanced Signal", shorttitle = "Advanced Signal", format = format.price, precision = 2, timeframe = "", timeframe_gaps = true)


var color blue_color = color.new(#4577ED, 0)
var color purple_color = color.new(#7859BC, 0)
var color yellow_color = color.new(#FCEF72, 0)
var color orange_color = color.new(#F2AB47, 0)
var color cyan_color = color.new(#60C3D7, 0)
var color green_color = color.new(#52A895, 0)
var color red_color = color.new(#DA4F7A, 0)

hline(0, title = "Middle Line", linestyle = hline.style_dotted, color = color.new(#FFFFFF, 95))


// Williams %R
method get_williams_r(int timeframes) =>
	highest_price = ta.highest(timeframes)
	lowest_price = ta.lowest(timeframes)
	100 * (close - highest_price) / (highest_price - lowest_price)

var string williams_r_txt = "Williams %R"
int williams_r_input = input.int(title = williams_r_txt, defval = 14)
float williams_r = get_williams_r(williams_r_input)
plot(williams_r + 50, title = williams_r_txt, color = blue_color)
var williams_r_upper_band = hline(30, title = "Williams %R Upper Band", color = color.new(#000000, 100))
var williams_r_lower_band = hline(-30, title = "Williams %R Lower Band", color = color.new(#000000, 100))
fill(williams_r_upper_band, williams_r_lower_band, title = "Williams %R Band Background", color = color.new(#4577ED, 90))





// Ultimate Oscillator
method get_uo_timeframes_avg(float buying_pressure, float true_range, int timeframes) => math.sum(buying_pressure, timeframes) / math.sum(true_range, timeframes)
method get_uo(float short_timeframes_avg, float middle_timeframes_avg, float long_timeframes_avg) => 100 * (short_timeframes_avg * 4 + middle_timeframes_avg * 2 + long_timeframes_avg) / 7

var string uo_txt = "Ultimate Oscillator"
int uo_short_timeframes_input = input.int(7, minval = 1, title = "Ultimate Oscillator Short Timeframes")
int uo_middle_timeframes_input = input.int(14, minval = 1, title = "Ultimate Oscillator Middle Timeframes")
int uo_long_timeframes_input = input.int(28, minval = 1, title = "Ultimate Oscillator Long Timeframes")
float uo_prior_close = close[1]
float uo_max_price = math.max(high, uo_prior_close)
float uo_min_price = math.min(low, uo_prior_close)
float uo_buying_pressure = close - uo_min_price
float uo_true_range = uo_max_price - uo_min_price
float uo_short_timeframes_avg = get_uo_timeframes_avg(uo_buying_pressure, uo_true_range, uo_short_timeframes_input)
float uo_middle_timeframes_avg = get_uo_timeframes_avg(uo_buying_pressure, uo_true_range, uo_middle_timeframes_input)
float uo_long_timeframes_avg = get_uo_timeframes_avg(uo_buying_pressure, uo_true_range, uo_long_timeframes_input)
float uo = get_uo(uo_short_timeframes_avg, uo_middle_timeframes_avg, uo_long_timeframes_avg)
plot(uo - 50, color = purple_color, title = uo_txt)
var uo_upper_band = hline(20, title = "Ultimate Oscillator Upper Band", color = color.new(#000000, 100))
var uo_lower_band = hline(-20, title = "Ultimate Oscillator Lower Band", color = color.new(#000000, 100))
fill(uo_upper_band, uo_lower_band, title = "Ultimate Oscillator Band Background", color = color.new(#7859BC, 90))




// Stochastic RSI
var string stoch_k_txt = "Stochastic K"
var string stoch_d_txt = "Stochastic D"
smooth_k = input.int(3, stoch_k_txt, minval = 1)
smooth_d = input.int(3, stoch_d_txt, minval = 1)
rsi_timeframes = input.int(14, "Stochastic RSI Timeframes", minval = 1)
stoch_timeframes = input.int(14, "Stochastic Timeframes", minval = 1)
stoch_rsi = ta.rsi(close, rsi_timeframes)
stoch_k = ta.sma(ta.stoch(stoch_rsi, stoch_rsi, stoch_rsi, stoch_timeframes), smooth_k)
stoch_d = ta.sma(stoch_k, smooth_d)
plot(stoch_k - 50, stoch_k_txt, color = green_color)
plot(stoch_d - 50, stoch_d_txt, color = red_color)
