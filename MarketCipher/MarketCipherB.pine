// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© tamth_

// @version=5
indicator("Market Cipher B", overlay = false)




requestCustomSecurity(_symbol, _res, _src, _repaint = false) => 
    request.security(_symbol, _res, _src[_repaint ? 0 : barstate.isrealtime ? 1 : 0])[_repaint ? 0 : barstate.isrealtime ? 0 : 1]




// Colors
color WHITE_COLOR = color.white
color BLUE_DARK_COLOR = #082EBF
color BLUE_LIGHT_COLOR = #3DCBFF
color YELLOW_COLOR = #f2e40a
color AQUA_COLOR = #00bbf9
color RED_COLOR = #e91e62
color PURPLE_COLOR = #764AF1
color LIGHT_GRAY_COLOR = #364156
color DARK_GRAY_COLOR = #212d40



// Inputs
string thresholdGrp = "Threshold"
bool thresholdShowed = input.bool(true, title = "Show", group = thresholdGrp)
int overboughtThreshold = input.int(60, title = "Overbought Threshold", group = thresholdGrp)
int oversoldThreshold = input.int(-60, title = "Oversold Threshold", group = thresholdGrp)
string wtGrp = "Waves Trend"
bool wtShowed = input.bool(true, title = "Show", group = wtGrp)
int wtChlPrd = input.int(9, title = "Channel Period", group = wtGrp)
int wtAvgPrd = input.int(12, title = "Average Period", group = wtGrp)
float wtMaSrc = input.source(hlc3, title = "MA Source", group = wtGrp)
int wtMaLen = input.int(3, title = "MA Length", group = wtGrp)
bool wtDivShowed = input.bool(false, title = "Show Divergence", group = wtGrp)
int wtLongBearishDivLevel = input.int(45, title = "Long Bearish Divergence Level", group = wtGrp)
int wtLongBullishDivLevel = input.int(-65, title = "Long Bullish Divergence Level", group = wtGrp)
int wtShortBrearishDivLevel = input.int(15, title = "Short Bearish Divergence Level", group = wtGrp)
int wtShortBullishDivLevel = input.int(-40, title = "Short Bullish Divergence Level", group = wtGrp)
string mfoGrp = "MFO"
bool mfoShowed = input.bool(true, title = "Show", group = mfoGrp)
bool mfoBarShowed = input.bool(false, title = "Support Bar", group = mfoGrp)
int mfoPrd = input.int(60, title = "Period", group = mfoGrp)
int mfoMult = input.int(150, title = "Area Multiplier", group = mfoGrp)
string rsiGrp = "RSI"
bool rsiShowed = input.bool(false, title = "Show", group = rsiGrp)
int rsiPrd = input.int(40, title = "Period", group = rsiGrp)
string stochRsiGrp = "Stochastic RSI"
bool stochRsiShowed = input.bool(false, title = "Show", group = stochRsiGrp)
int stochRsiPrd = input.int(81, title = "Period", group = stochRsiGrp)
string vwapGrp = "VWAP"
bool vwapShowed = input.bool(true, title = "Show", group = vwapGrp)


// Methods
getTopFractal(src) => src[4] < src[2] and src[3] < src[2] and src[2] > src[1] and src[2] > src[0]
getBotFractal(src) => src[4] > src[2] and src[3] > src[2] and src[2] < src[1] and src[2] < src[0]
fractalize(src) => getTopFractal(src) ? 1 : getBotFractal(src) ? -1 : 0

getDivPoints(src, topLimit, botLimit) =>
    float top_fractal = fractalize(src) > 0 and src[2] >= topLimit ? src[2] : na
    float bot_fractal = fractalize(src) < 0 and src[2] <= botLimit ? src[2] : na
    float high_prev = ta.valuewhen(top_fractal, src[2], 0)[2]
    float high_price = ta.valuewhen(top_fractal, high[2], 0)[2]
    float low_prev = ta.valuewhen(bot_fractal, src[2], 0)[2]
    float low_price = ta.valuewhen(bot_fractal, low[2], 0)[2]
    bool is_bearish = top_fractal and high[2] > high_price and src[2] < high_prev
    bool is_bullish = bot_fractal and low[2] < low_price and src[2] > low_prev
    [top_fractal, bot_fractal, low_prev, is_bearish, is_bullish]

getWtAndVwap() =>
    float src = requestCustomSecurity(syminfo.tickerid, timeframe.period, wtMaSrc)
    float esa = ta.ema(src, wtChlPrd)
    float d = ta.ema(math.abs(src - esa), wtChlPrd)
    float ci = (src - esa) / (0.015 * d)
    float leadingWt = ta.ema(ci, wtAvgPrd)
    float laggingWt = ta.sma(leadingWt, wtMaLen)
    float vwap = leadingWt - laggingWt
    [leadingWt, laggingWt, vwap]

getHaVal(src) => requestCustomSecurity(ticker.heikinashi(syminfo.tickerid), timeframe.period, src)

getMfo() =>
    haOpen = getHaVal(open)
    haClose = getHaVal(close)
    haHigh = getHaVal(high)
    haLow = getHaVal(low)
    mfo = ta.sma((haClose - haOpen) / (haHigh - haLow) * mfoMult, mfoPrd)

getRsi(_close, _high, _low) =>
    ta.sma(ta.stoch(_close, _high, _low, rsiPrd), 2)

getStochRsi(_close, _high, _low) =>
    ta.sma(ta.stoch(_close, _high, _low, stochRsiPrd), 2)
        

series float _close = requestCustomSecurity(syminfo.tickerid, timeframe.period, close)
series float _high = requestCustomSecurity(syminfo.tickerid, timeframe.period, high)
series float _low = requestCustomSecurity(syminfo.tickerid, timeframe.period, low)
float rsi = getRsi(_close, _high, _low)
float stochRsi = getStochRsi(_close, _high, _low)
float mfo = getMfo()
[leadingWt, laggingWt, vwap] = getWtAndVwap()

[wtLongTopFractal, wtLongBotFractal, wtLongLowPrev, isWtLongBearishDiv, isWtLongBullishDiv] = getDivPoints(laggingWt, wtLongBearishDivLevel, wtLongBullishDivLevel)
[wtShortTopFractal, wtShortBotFractal, wtShortLowPrev, isWtShortBearishDiv, isWtShortBullishDiv] =  getDivPoints(laggingWt, wtShortBrearishDivLevel, wtShortBullishDivLevel)

// Plots
plot(thresholdShowed ? overboughtThreshold : na, title = "Overbought Threshold", color = color.new(AQUA_COLOR, 60), display = display.pane, linewidth = 4)
plot(thresholdShowed ? oversoldThreshold : na, title = "Oversold Threshold", color = color.new(RED_COLOR, 60), display = display.pane, linewidth = 4)

var mfoBarTopLine = plot(mfoShowed and mfoBarShowed ? -100 : na, title = "MFO Bar", color = color.new(WHITE_COLOR, 100), editable = false, display = display.pane)
var mfoBarBotLine = plot(mfoShowed and mfoBarShowed ? -105 : na, title = "MFO Bar", color = color.new(WHITE_COLOR, 100), editable = false, display = display.pane)
fill(mfoBarTopLine, mfoBarBotLine, title = "MFO Bar", color = mfo > 0 ? color.new(AQUA_COLOR, 40) : color.new(RED_COLOR, 40))

plot(wtShowed ? leadingWt : na, title = "Leading Wave Trend", color = LIGHT_GRAY_COLOR, linewidth = 1, style = plot.style_area)
plot(wtShowed ? laggingWt : na, title = "Lagging Wave Trend", color = color.new(DARK_GRAY_COLOR, 50), linewidth = 1, style = plot.style_area)

plot(vwapShowed ? vwap : na, title = "VWAP", color = color.new(YELLOW_COLOR, 40), style = plot.style_area)

plot(mfoShowed ? mfo : na, title = "MFO", color = mfo > 0 ? color.new(AQUA_COLOR, 60) : color.new(RED_COLOR, 60), linewidth = 2, style = plot.style_area)

plot(0, title = "Zero Line", color = color.new(WHITE_COLOR, 50), display = display.pane)

plot(ta.crossover(leadingWt, laggingWt) ? laggingWt : na, title = "Buy Signal", color = AQUA_COLOR, linewidth = 2, style = plot.style_circles, display = display.pane)
plot(ta.crossunder(leadingWt, laggingWt) ? laggingWt : na, title = "Sell Signal", color = RED_COLOR, linewidth = 2, style = plot.style_circles, display = display.pane)

color wtLongBearishDivColor = wtDivShowed and isWtLongBearishDiv ? RED_COLOR : na
color wtLongBullishDivColor = wtDivShowed and isWtLongBullishDiv ? AQUA_COLOR : na
color wtShortBearishDivColor = wtDivShowed and isWtShortBearishDiv ? color.new(RED_COLOR, 50) : na
color wtShortBullishDivColor = wtDivShowed and isWtShortBullishDiv ? color.new(AQUA_COLOR, 50) : na
plot(series = wtLongTopFractal ? laggingWt[2] : na, title = "Wave Trend Long Bearish Divergence", color = wtLongBearishDivColor, linewidth = 2, offset = -2, display = display.pane)
plot(series = wtLongBotFractal ? laggingWt[2] : na, title = "Wave Trend Long Bullish Divergence", color = wtLongBullishDivColor, linewidth = 2, offset = -2, display = display.pane)
plot(series = wtShortTopFractal ? laggingWt[2] : na, title = "Wave Trend Short Bearish Divergence", color = wtShortBearishDivColor, linewidth = 2, offset = -2, display = display.pane)
plot(series = wtShortBotFractal ? laggingWt[2] : na, title = "Wave Trend Short Bullish Divergence", color = wtShortBullishDivColor, linewidth = 2, offset = -2, display = display.pane)

plot(rsiShowed ? rsi : na, title = "RSI", color = PURPLE_COLOR, linewidth = 2)

plot(stochRsiShowed ? stochRsi : na, title = "Stochastic RSI", color = rsi > stochRsi ? AQUA_COLOR : RED_COLOR, linewidth = 2)